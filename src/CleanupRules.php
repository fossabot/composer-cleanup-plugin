<?php

namespace Tavy315\Composer;

class CleanupRules
{
    public static function getRules()
    {
        $bin = 'bin';
        $docs = 'CHANGELOG* CONTRIBUTING* FAQ* HISTORY* INSTALL* install* LICENSE* license* README* readme* UPGRADING* UPGRADE* package* demo demos doc docs example examples';
        $tests = '.scrutinizer.yml .travis.yml phpunit.xml* phpunit.php test tests Tests travis';

        return [
            'anahkiasen/former'                             => [ $docs, $tests ],
            'anahkiasen/html-object'                        => [ $docs, 'phpunit.xml* tests/*' ],
            'anahkiasen/rocketeer'                          => [ $docs, $tests ],
            'anahkiasen/underscore-php'                     => [ $docs, $tests ],
            'barryvdh/composer-cleanup-plugin'              => [ $docs, $tests ],
            'barryvdh/laravel-debugbar'                     => [ $docs, $tests ],
            'barryvdh/laravel-ide-helper'                   => [ $docs, $tests ],
            'bllim/datatables'                              => [ $docs, $tests ],
            'cartalyst/sentry'                              => [ $docs, $tests ],
            'classpreloader/classpreloader'                 => [ $docs, $tests ],
            'd11wtq/boris'                                  => [ $docs, $tests ],
            'danielstjules/stringy'                         => [ $docs, $tests ],
            'dflydev/markdown'                              => [ $docs, $tests ],
            'dnoegel/php-xdg-base-dir'                      => [ $docs, $tests ],
            'doctrine/annotations'                          => [ $docs, $tests, $bin ],
            'doctrine/cache'                                => [ $docs, $tests, $bin ],
            'doctrine/collections'                          => [ $docs, $tests ],
            'doctrine/common'                               => [ $docs, $tests, $bin, 'lib/vendor' ],
            'doctrine/dbal'                                 => [ $docs, $tests, $bin . 'build* docs2 lib/vendor' ],
            'doctrine/inflector'                            => [ $docs, $tests ],
            'dompdf/dompdf'                                 => [ $docs, $tests, 'www VERSION' ],
            'filp/whoops'                                   => [ $docs, $tests ],
            'guzzle/guzzle'                                 => [ $docs, $tests ],
            'guzzlehttp/guzzle'                             => [ $docs, $tests ],
            'guzzlehttp/oauth-subscriber'                   => [ $docs, $tests ],
            'guzzlehttp/streams'                            => [ $docs, $tests ],
            'imagine/imagine'                               => [ $docs, $tests, 'lib/Imagine/Test' ],
            'intervention/image'                            => [ $docs, $tests, 'public' ],
            'ircmaxell/password-compat'                     => [ $docs, $tests ],
            'jakub-onderka/php-console-color'               => [ $docs, $tests, 'build.xml example.php' ],
            'jakub-onderka/php-console-highlighter'         => [ $docs, $tests, 'build.xml' ],
            'jasonlewis/basset'                             => [ $docs, $tests ],
            'jeremeamia/SuperClosure'                       => [ $docs, $tests ],
            'kriswallsmith/assetic'                         => [ $docs, $tests ],
            'laravel/framework'                             => [ $docs, $tests, 'build' ],
            'leafo/lessphp'                                 => [ $docs, $tests, 'Makefile package.sh' ],
            'league/flysystem'                              => [ $docs, $tests ],
            'league/stack-robots'                           => [ $docs, $tests ],
            'maximebf/debugbar'                             => [ $docs, $tests ],
            'mccool/laravel-auto-presenter'                 => [ $docs, $tests ],
            'mockery/mockery'                               => [ $docs, $tests ],
            'monolog/monolog'                               => [ $docs, $tests ],
            'mrclay/minify'                                 => [ $docs, $tests, 'MIN.txt min_* min/builder min/*.php min/quick-test.* min/.htaccess' ],
            'mtdowling/cron-expression'                     => [ $docs, $tests ],
            'mustache/mustache'                             => [ $docs, $tests, $bin ],
            'nesbot/carbon'                                 => [ $docs, $tests ],
            'nikic/php-parser'                              => [ $docs, $tests, 'test_old' ],
            'oyejorge/less.php'                             => [ $docs, $tests ],
            'patchwork/utf8'                                => [ $docs, $tests ],
            'phenx/php-font-lib'                            => [ $docs, $tests, 'www index.php' ],
            'phenx/php-svg-lib'                             => [ $docs, $tests ],
            'phpdocumentor/reflection-docblock'             => [ $docs, $tests ],
            'phpoffice/phpexcel'                            => [ $docs, $tests, 'Examples unitTests changelog.txt install.txt license.md' ],
            'phpseclib/phpseclib'                           => [ $docs, $tests, 'build' ],
            'predis/predis'                                 => [ $docs, $tests, $bin ],
            'psr/log'                                       => [ $docs, $tests ],
            'psy/psysh'                                     => [ $docs, $tests ],
            'rcrowe/twigbridge'                             => [ $docs, $tests ],
            'simplepie/simplepie'                           => [ $docs, $tests, 'build compatibility_test ROADMAP.md' ],
            'stack/builder'                                 => [ $docs, $tests ],
            'swiftmailer/swiftmailer'                       => [ $docs, $tests, 'build* notes test-suite create_pear_package.php' ],
            'symfony/browser-kit'                           => [ $docs, $tests ],
            'symfony/class-loader'                          => [ $docs, $tests ],
            'symfony/console'                               => [ $docs, $tests ],
            'symfony/css-selector'                          => [ $docs, $tests ],
            'symfony/debug'                                 => [ $docs, $tests ],
            'symfony/dom-crawler'                           => [ $docs, $tests ],
            'symfony/event-dispatcher'                      => [ $docs, $tests ],
            'symfony/filesystem'                            => [ $docs, $tests ],
            'symfony/finder'                                => [ $docs, $tests ],
            'symfony/http-foundation'                       => [ $docs, $tests ],
            'symfony/http-kernel'                           => [ $docs, $tests ],
            'symfony/process'                               => [ $docs, $tests ],
            'symfony/routing'                               => [ $docs, $tests ],
            'symfony/security'                              => [ $docs, $tests ],
            'symfony/security-core'                         => [ $docs, $tests ],
            'symfony/translation'                           => [ $docs, $tests ],
            'symfony/var-dumper'                            => [ $docs, $tests ],
            'symfony/yaml'                                  => [ $docs, $tests ],
            'tavy315/bpost'                                 => [ $docs, $tests ],
            'tavy315/google-api-php-client'                 => [ $docs, $tests ],
            'tavy315/twitter-bootstrap-zend-form-decorator' => [ $docs, $tests ],
            'tavy315/zfdebug'                               => [ $docs ],
            'tavy315/zendframework1'                        => [ $docs, $tests, $bin, 'resources', 'DEVELOPMENT_README.md' ],
            'tijsverkoyen/css-to-inline-styles'             => [ $docs, $tests ],
            'twig/twig'                                     => [ $docs, $tests ],
            'venturecraft/revisionable'                     => [ $docs, $tests ],
            'vlucas/phpdotenv'                              => [ $docs, $tests ],
            'willdurand/geocoder'                           => [ $docs, $tests ],
        ];
    }
}
